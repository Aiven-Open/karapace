services:

  kafka:
    networks:
      - karapace
    image: apache/kafka:3.9.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9101:9101"  # JMX
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_MAX_MESSAGE_BYTES: 104857600
      KAFKA_MESSAGE_MAX_BYTES: 104857600
      KAFKA_BUFFER_MEMORY: 104857600
      KAFKA_MAX_REQUEST_SIZE: 104857600
      KAFKA_REPLICA_FETCH_MAX_BYTES: 104857600
      # JMX Configuration
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      # Additional configurations for compatibility
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://karapace-schema-registry:8081

  karapace-schema-registry:
    networks:
      - karapace
    image: ghcr.io/aiven-open/karapace:develop
    hostname: karapace-schema-registry
    container_name: karapace-schema-registry
    build:
      context: ..
      dockerfile: container/Dockerfile
      args:
        KARAPACE_VERSION: $KARAPACE_VERSION
        PYTHON_VERSION: $PYTHON_VERSION
    entrypoint:
      - python3
      - -m
      - karapace
    depends_on:
      - kafka
      - opentelemetry-collector
    ports:
      - 8081:8081
    volumes:
      - ./certs:/opt/karapace/certs
    environment:
      KARAPACE_KARAPACE_REGISTRY: true
      KARAPACE_ADVERTISED_HOSTNAME: karapace-schema-registry
      KARAPACE_ADVERTISED_PROTOCOL: https
      KARAPACE_BOOTSTRAP_URI: kafka:29092
      KARAPACE_PORT: 8081
      KARAPACE_HOST: 0.0.0.0
      KARAPACE_CLIENT_ID: karapace-schema-registry-0
      KARAPACE_GROUP_ID: karapace-schema-registry
      KARAPACE_MASTER_ELECTION_STRATEGY: highest
      KARAPACE_MASTER_ELIGIBILITY: true
      KARAPACE_TOPIC_NAME: _schemas
      KARAPACE_LOG_LEVEL: INFO
      KARAPACE_COMPATIBILITY: FULL
      KARAPACE_STATSD_HOST: statsd-exporter
      KARAPACE_STATSD_PORT: 8125
      KARAPACE_KAFKA_SCHEMA_READER_STRICT_MODE: false
      KARAPACE_KAFKA_RETRIABLE_ERRORS_SILENCED: true
      KARAPACE_TAGS__APP: karapace-schema-registry
      KARAPACE_TELEMETRY__OTEL_ENDPOINT_URL: http://opentelemetry-collector:4317
      KARAPACE_TELEMETRY__OTEL_METRICS_EXPORTER: OTLP
      KARAPACE_TELEMETRY__OTEL_TRACES_EXPORTER: OTLP
      KARAPACE_TELEMETRY__RESOURCE_SERVICE_NAME: karapace-schema-registry
      KARAPACE_TELEMETRY__RESOURCE_SERVICE_INSTANCE_ID: sr1
      KARAPACE_TELEMETRY__RESOURCE_TELEMETRY_SDK_NAME: opentelemetry
      KARAPACE_TELEMETRY__RESOURCE_TELEMETRY_SDK_LANGUAGE: python
      KARAPACE_TELEMETRY__RESOURCE_TELEMETRY_SDK_VERSION: 1.27.0
      KARAPACE_SERVER_TLS_CAFILE: /opt/karapace/certs/ca/rootCA.pem
      KARAPACE_SERVER_TLS_CERTFILE: /opt/karapace/certs/cert.pem
      KARAPACE_SERVER_TLS_KEYFILE: /opt/karapace/certs/key.pem
      KARAPACE_SASL_OAUTHBEARER_JWKS_ENDPOINT_URL: http://keycloak:8080/realms/karapace/protocol/openid-connect/certs
      KARAPACE_SASL_OAUTHBEARER_EXPECTED_ISSUER: http://keycloak:8080/realms/karapace
      KARAPACE_SASL_OAUTHBEARER_EXPECTED_AUDIENCE: "karapace-audience"
      KARAPACE_SASL_OAUTHBEARER_SUB_CLAIM_NAME: sub
      KARAPACE_SASL_OAUTHBEARER_AUTHORIZATION_ENABLED: true
      KARAPACE_SASL_OAUTHBEARER_CLIENT_ID: "karapace-client"
      KARAPACE_SASL_OAUTHBEARER_ROLES_CLAIM_PATH: "resource_access.karapace-client.roles"
      KARAPACE_SASL_OAUTHBEARER_METHOD_ROLES: '{"GET": ["schema:read", "subject:read"], "POST": ["schema:write", "subject:write"], "PUT": ["config_subject:update","config_global:update"], "DELETE": ["schema:delete", "subject:delete"]}'

  karapace-schema-registry-follower:
    networks:
      - karapace
    image: ghcr.io/aiven-open/karapace:develop
    hostname: karapace-schema-registry-follower
    container_name: karapace-schema-registry-follower
    build:
      context: ..
      dockerfile: container/Dockerfile
      args:
        KARAPACE_VERSION: $KARAPACE_VERSION
        PYTHON_VERSION: $PYTHON_VERSION
    entrypoint:
      - python3
      - -m
      - karapace
    depends_on:
      - kafka
      - opentelemetry-collector
    ports:
      - 8181:8181
    volumes:
      - ./certs:/opt/karapace/certs
    environment:
      KARAPACE_KARAPACE_REGISTRY: true
      KARAPACE_ADVERTISED_HOSTNAME: karapace-schema-registry-follower
      KARAPACE_ADVERTISED_PROTOCOL: https
      KARAPACE_BOOTSTRAP_URI: kafka:29092
      KARAPACE_PORT: 8181
      KARAPACE_HOST: 0.0.0.0
      KARAPACE_CLIENT_ID: karapace-schema-registry-1
      KARAPACE_GROUP_ID: karapace-schema-registry
      KARAPACE_MASTER_ELECTION_STRATEGY: highest
      KARAPACE_MASTER_ELIGIBILITY: true
      KARAPACE_TOPIC_NAME: _schemas
      KARAPACE_LOG_LEVEL: INFO
      KARAPACE_COMPATIBILITY: FULL
      KARAPACE_STATSD_HOST: statsd-exporter
      KARAPACE_STATSD_PORT: 8125
      KARAPACE_KAFKA_SCHEMA_READER_STRICT_MODE: false
      KARAPACE_KAFKA_RETRIABLE_ERRORS_SILENCED: true
      KARAPACE_TAGS__APP: karapace-schema-registry-follower
      KARAPACE_TELEMETRY__OTEL_ENDPOINT_URL: http://opentelemetry-collector:4317
      KARAPACE_TELEMETRY__OTEL_METRICS_EXPORTER: OTLP
      KARAPACE_TELEMETRY__OTEL_TRACES_EXPORTER: OTLP
      KARAPACE_TELEMETRY__RESOURCE_SERVICE_NAME: karapace-schema-registry-follower
      KARAPACE_TELEMETRY__RESOURCE_SERVICE_INSTANCE_ID: sr1
      KARAPACE_TELEMETRY__RESOURCE_TELEMETRY_SDK_NAME: opentelemetry
      KARAPACE_TELEMETRY__RESOURCE_TELEMETRY_SDK_LANGUAGE: python
      KARAPACE_TELEMETRY__RESOURCE_TELEMETRY_SDK_VERSION: 1.27.0
      KARAPACE_SERVER_TLS_CAFILE: /opt/karapace/certs/ca/rootCA.pem
      KARAPACE_SERVER_TLS_CERTFILE: /opt/karapace/certs/cert.pem
      KARAPACE_SERVER_TLS_KEYFILE: /opt/karapace/certs/key.pem
      KARAPACE_SASL_OAUTHBEARER_JWKS_ENDPOINT_URL: http://keycloak:8080/realms/karapace/protocol/openid-connect/certs
      KARAPACE_SASL_OAUTHBEARER_EXPECTED_ISSUER: http://keycloak:8080/realms/karapace
      KARAPACE_SASL_OAUTHBEARER_EXPECTED_AUDIENCE: "karapace-audience"
      KARAPACE_SASL_OAUTHBEARER_SUB_CLAIM_NAME: sub
      KARAPACE_SASL_OAUTHBEARER_AUTHORIZATION_ENABLED: true
      KARAPACE_SASL_OAUTHBEARER_CLIENT_ID: "karapace-client"
      KARAPACE_SASL_OAUTHBEARER_ROLES_CLAIM_PATH: "resource_access.karapace-client.roles"
      KARAPACE_SASL_OAUTHBEARER_METHOD_ROLES: '{"GET": ["schema:read", "subject:read"], "POST": ["schema:write", "subject:write"], "PUT": ["config_subject:update","config_global:update"], "DELETE": ["schema:delete", "subject:delete"]}'

  karapace-rest-proxy:
    networks:
      - karapace
    image: ghcr.io/aiven-open/karapace:develop
    hostname: karapace-rest-proxy
    container_name: karapace-rest-proxy
    build:
      context: ..
      dockerfile: container/Dockerfile
      args:
        KARAPACE_VERSION: $KARAPACE_VERSION
        PYTHON_VERSION: $PYTHON_VERSION
    entrypoint:
      - python3
      - -m
      - karapace.kafka_rest_apis
    depends_on:
      - kafka
      - karapace-schema-registry
    ports:
      - 8082:8082
    environment:
      KARAPACE_KARAPACE_REST: true
      KARAPACE_PORT: 8082
      KARAPACE_HOST: 0.0.0.0
      KARAPACE_ADVERTISED_HOSTNAME: karapace-rest-proxy
      KARAPACE_ADVERTISED_PROTOCOL: http
      KARAPACE_BOOTSTRAP_URI: kafka:29092
      KARAPACE_REGISTRY_SCHEME: https
      KARAPACE_REGISTRY_HOST: karapace-schema-registry
      KARAPACE_REGISTRY_PORT: 8081
      KARAPACE_ADMIN_METADATA_MAX_AGE: 0
      KARAPACE_LOG_LEVEL: INFO
      KARAPACE_STATSD_HOST: statsd-exporter
      KARAPACE_STATSD_PORT: 8125
      KARAPACE_KAFKA_SCHEMA_READER_STRICT_MODE: false
      KARAPACE_KAFKA_RETRIABLE_ERRORS_SILENCED: true

  karapace-cli:
    networks:
      - karapace
    image: ghcr.io/aiven-open/karapace:cli
    hostname: karapace-cli
    container_name: karapace-cli
    build:
      context: ..
      target: cli
      dockerfile: container/Dockerfile
      args:
        KARAPACE_VERSION: $KARAPACE_VERSION
        PYTHON_VERSION: $PYTHON_VERSION
        RUNNER_UID: $RUNNER_UID
        RUNNER_GID: $RUNNER_GID
    tty: true
    depends_on:
      - kafka
      - karapace-schema-registry
      - karapace-rest-proxy
    volumes:
      - ./certs:/opt/karapace/certs
      - ../bin:/opt/karapace/bin
      - ../tests:/opt/karapace/tests
      - ../pytest.ini:/opt/karapace/pytest.ini
      - ../mypy.ini:/opt/karapace/mypy.ini
      - ../.pre-commit-config.yaml:/opt/karapace/.pre-commit-config.yaml
      - ../.coveragerc:/opt/karapace/.coveragerc
      - ../.coverage.3.10:/opt/karapace/coverage/.coverage.3.10
      - ../.coverage.3.11:/opt/karapace/coverage/.coverage.3.11
      - ../.coverage.3.12:/opt/karapace/coverage/.coverage.3.12
    environment:
      - COVERAGE_FILE
      - COVERAGE_RCFILE=/opt/karapace/.coveragerc

  prometheus:
    networks:
      - karapace
    image: prom/prometheus
    hostname: prometheus
    container_name: prometheus
    command:
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=1d
      - --enable-feature=otlp-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
    depends_on:
      - karapace-schema-registry
      - karapace-rest-proxy
      - opentelemetry-collector
    ports:
      - 9090:9090

  grafana:
    networks:
      - karapace
    image: grafana/grafana
    hostname: grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: karapace
      GF_SECURITY_ADMIN_PASSWORD: karapace
      GF_PATHS_PROVISIONING: /grafana/provisioning
    ports:
      - 9091:3000
    volumes:
      - ./grafana/dashboards:/grafana/dashboards
      - ./grafana/provisioning:/grafana/provisioning

  statsd-exporter:
    networks:
      - karapace
    image: prom/statsd-exporter
    hostname: statsd-exporter
    container_name: statsd-exporter
    command: --statsd.listen-udp=:8125 --web.listen-address=:9102
    ports:
      - 9102:9102
      - 8125:8125/udp

  opentelemetry-collector:
    networks:
      - karapace
    image: otel/opentelemetry-collector-contrib:latest
    hostname: opentelemetry-collector
    container_name: opentelemetry-collector
    command: --config=/etc/collector-config.yaml
    volumes:
      - ./opentelemetry/collector-config.yaml:/etc/collector-config.yaml
    ports:  # 4317=OTLP-gRPC-receiver | 8888=prom-collector-metrics | 8889=prom-exporter-metrics
      - 4317:4317
      - 8888:8888
      - 8889:8889

  jaeger:
    networks:
      - karapace
    image: jaegertracing/all-in-one:latest
    hostname: jaeger
    container_name: jaeger
    ports:  # 6831=agent | 16686=UI | 14268=spans | 4317=metrics (not exposing, clashes with opentelemetry-collector)
      - 6831:6831/udp
      - 16686:16686
      - 14268:14268

  keycloak:
    networks:
      - karapace
    image: quay.io/keycloak/keycloak:24.0
    hostname: keycloak
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "8383:8080"

networks:
  karapace:
    name: karapace_network
    driver: bridge
