# Default values for cp-schema-registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## ------------------------------------------------------
## karapace Registry
## ------------------------------------------------------

## Number of Karapace Registry Pod
replicaCount: 1

## Image Info
## https://github.com/aiven/karapace/blob/master/container/docker-compose.yml
image: aivenoy/karapace
imageTag: 863bf4a7faec3b13eba57a0864e63f5e416cd6e3

## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
imagePullPolicy: IfNotPresent

## Specify an array of imagePullSecrets.
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
imagePullSecrets:

configurationOverrides: {}

## Additional env variables
customEnv: {}

## Deployment Annotations
deploymentAnnotations: {}

## The port on which the karapace Registry will be available and serving requests
servicePort: 8081


kafka:
  bootstrapServers: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

## Custom pod annotations
podAnnotations: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector: {}

## Taints to tolerate on node assignment:
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Pod scheduling constraints
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

rest:
  servicPort: 8082

## Privilege and access control settings for a Pod or Container
## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}

podSecurityContext:
  runAsUser: 99
  fsGroup: 99


autoScaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

customLables: {}

serviceMonitor:
  create: false
  additionalLabels: {}
  honorLables: false

deployment:
  annotations: {}

  rest:
    adminMetadataMaxAge: "0"
    args: ["-c", "/opt/karapace/start.sh rest"]
    command: ["/bin/sh"]
    extraEnvs:
      - name: KARAPACE_REST_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: KARAPACE_REST_ADMIN_METADATA_MAX_AGE
        value: "0"
      - name: KARAPACE_REST_LOG_LEVEL
        value: "INFO"
      - name: KARAPACE_REST_SECURITY_PROTOCOL
        value: SASL_SSL
      - name: KARAPACE_REST_SSL_CAFILE
        value: /opt/karapace/configs/tls/ca.crt
      - name: KARAPACE_REST_SASL_MECHANISM
        value: SCRAM-SHA-512
      - name: KARAPACE_REST_SASL_PLAIN_USERNAME
        value: karapace-registry-user
      - name: KARAPACE_REST_SASL_PLAIN_PASSWORD
        valueFrom:
          secretKeyRef:
            name: karapace-registry-user
            key: password

    volumeMounts:
      - name: kafka-cluster-ca-cert
        mountPath: /opt/karapace/configs/tls
        readOnly: true

  registry:
    args: ["-c", "/opt/karapace/start.sh registry"]
    command: ["/bin/sh"]
    extraEnvs:
      - name: KARAPACE_REGISTRY_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: KARAPACE_REGISTRY_CLIENT_ID
        value: "karapace"
      - name: SCHEMA_REGISTRY_MASTER_ELIGIBILITY
        value: "true"
      - name: KARAPACE_REGISTRY_TOPIC_NAME
        value: "_schemas"
      - name: KARAPACE_REGISTRY_LOG_LEVEL
        value: "INFO"
      - name: KARAPACE_REGISTRY_SECURITY_PROTOCOL
        value: SASL_SSL
      - name: KARAPACE_REGISTRY_SSL_CAFILE
        value: /opt/karapace/configs/tls/ca.crt
      - name: KARAPACE_REGISTRY_SASL_MECHANISM
        value: SCRAM-SHA-512
      - name: KARAPACE_REGISTRY_SASL_PLAIN_USERNAME
        value: karapace-registry-user
      - name: KARAPACE_REGISTRY_SASL_PLAIN_PASSWORD
        valueFrom:
          secretKeyRef:
            name: karapace-registry-user
            key: password

    volumeMounts:
      - name: kafka-cluster-ca-cert
        mountPath: /opt/karapace/configs/tls
        readOnly: true

  volumes:
    - name: kafka-cluster-ca-cert
      secret:
        secretName: karapace-cluster-ca-cert

configMap:
  enabled: false
  spec: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  name: ""

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
